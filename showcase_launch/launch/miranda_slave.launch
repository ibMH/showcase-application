<launch>
    <arg name="robot_name"  default="miranda"/>
    <arg name="twist_local" default="false"/>
    <!-- This defines some positions for the robot arm -->
    <!-- <arg name="pose_filename" default="$(find transport_launcher)/poses/$(arg robot_name)_transport_poses.yaml"/> -->
    <!-- This defines the relative position of the slave robot to the master robot-->
    <arg name="reference_filename" default="$(find showcase_launch)/config/reference_$(arg robot_name).yaml"/>
    
    <!-- Imperance control not necessary for first showcase application -->
    <!-- <node   name="reconfigure_load_stiffness_ic" pkg="dynamic_reconfigure" type="dynparam" ns="$(arg robot_name)"
            args="load /$(arg robot_name)/panda/compliance_controller $(find transport_launcher)/config/impedance_dyn.yaml" />
    
    <node   name="reconfigure_load_stiffness_cc" pkg="dynamic_reconfigure" type="dynparam" ns="$(arg robot_name)"
            args="load /$(arg robot_name)/panda/cartesian_controller $(find transport_launcher)/config/impedance_dyn.yaml" /> -->


  
    <!--    Laucnh the robot hardware
            Access move base server
            Sate controlle for the knowledge of current manipulator state
            Joint controller for teached movemet
            impedance controller for transport movement
    -->
    <include file="$(find miranda_hardware_helper)/launch/miranda.launch">
        <arg name="robot_name"  default="$(arg robot_name)"/>
        <arg name="controllers_started" value="position_joint_controller"/> <!--franka_state_controller not necessary for the moment?-->
        <arg name="controllers_stopped" value="compliance_controller cartesian_controller"/>
        <arg name="pose_filename" value="$(arg pose_filename)"/>
    </include>

    <!-- Launch the formation slave controller -->
    <rosparam command="load" file="$(arg reference_filename)" ns="$(arg robot_name)/mir/slave_controller"/>
    <include file="$(find multi_robot_controller)/launch/slave.launch" ns="$(arg robot_name)/mir">
        <arg unless="$(arg twist_local)" name="config_file" value="$(find transport_launcher)/config/global_twist_slave_controller.yaml"/>
        <arg if="$(arg twist_local)" name="config_file" value="$(find transport_launcher)/config/local_twist_slave_controller.yaml"/>
    </include>

</launch>